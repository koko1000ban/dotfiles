a = "."
a =~ %r!(\.{1,2})!
"." =~ %r!(\.{1,2})!
".." =~ %r!(\.{1,2})!
".." =~ %r!(.{1,2})!
".." =~ /(\.{1,2})/
".." =~ /\.{1,2}/
".." =~ /^\.{1,2}$/
".." =~ /^.{1,2}$/
".." =~ /^.\{1,2\}$/
"..." =~ /^.\{1,2\}$/
"..m" =~ /\.{1,2}/
"..." =~ /\.{1,2}/
"..hogehoge" =~ /\.{1,2}/
".hoge" =~ /\.{1,2}/
".hoge" =~ /^\.{1,2}$/
"." =~ /^\.{1,2}$/
".." =~ /^\.{1,2}$/
User.all
User.first
User.first.devices
reload!
User.first.devices
User.first.devices.create!()
User.first.devices.create!(platform: :android)
User.first.devices.create!(platform: :android, token: 'hogehoge')
User.first.devices
User.where(name: 'test+0')
User.where(name: 'test_0')
User.where(name: 'test_0').firts
User.where(name: 'test_0').first
User.where(name: 'test_0').first.devices
User.first
User.first.notifications
User.first.notifications.create!
User.first.notifications.create!(message_key: :commented)
User.first.notifications.create!(message_key: :commented, notificationable: Comment.first)
Comment.first
User.first.notifications.create!(message_key: :commented, notificationable: Comment.first)
reload!
User.first.notifications.create!(message_key: :commented, notificationable: Comment.first)
User.first.notifications
User.first.notifications.notificationable
User.first.notifications.first.notificationable
User.first.notifications.first.notificationable.user
User.first.notifications.first
User.first.notifications.first.message_type
User.first.notifications.first.message_key
Notification
I18n.locale
User.first.notifications.create!(message_key: :commented, notificationable: Comment.first)
Nofitication
Notification
Notification.first
Notification.first.user
Notification.first.user.devices
Notification.first.user.joins(:devices)
Notification.first.user.devices.find_each{ }
Notification.first.user.devices.find_each{ |a| a }
Notification.first.user
Notification.includes(:user).first.user
Notification.first.user
Notification.includes(:user).first.user
Comment.first
Comment.first.class
Comment.first.table
Comment.first.table_name
Comment.first.class.to_s
"#{Comment.first.class.to_s}Notification".classify
"#{Comment.first.class.to_s}Notification".constantize
"#{Comment.first.class.to_s}Notification".constantize.new
Time.now
Time.now.utc
